{"ast":null,"code":"var _jsxFileName = \"/Users/clairenicholson/Documents/weather-react/src/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Weatherinfo from \"./Weatherinfo\";\nimport weatherforecast from \"./weatherforecast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather(props) {\n  _s();\n\n  const [city, setCity] = useState(props.defaultCity);\n  let [load, setLoad] = useState(false);\n  let [weather, setWeather] = useState({});\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    let apiKey = `cb957f6011cbe58c2051d26f28640ef9`;\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(url).then(showTemperature);\n  }\n\n  function showTemperature(response) {\n    setLoad(true);\n    console.log(response.data);\n    setWeather({\n      coordinates: response.data.coordinates,\n      temperature: response.data.main.temp,\n      description: response.data.weather[0].description,\n      humidity: response.data.main.humidity,\n      wind: Math.round(response.data.wind.speed),\n      icon: `http://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`\n    });\n  }\n\n  function updateCity(event) {\n    setCity(event.target.value);\n  }\n\n  let form = /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: updateCity,\n      type: \"Search\",\n      placeholder: \"Search for a city\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n\n  if (load) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", form, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"weather\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" Here's the weather in \", city, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: weather.icon,\n            alt: weather.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Temperature:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 18\n        }, this), \" \", Math.round(weather.temperature), \" \", \"\\xBAC\", /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), \" \", weather.description, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Humidity:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), \" \", Math.round(weather.humidity), \" %\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Wind:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), \" \", weather.wind, \" km/h\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Weatherinfo, {\n        data: Weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"weatherforecast\", {\n        coordinates: Weather.coordinates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", form, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_s(Weather, \"DaEJW1RgE+UPMhW0mf7RLk947p4=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/clairenicholson/Documents/weather-react/src/Weather.js"],"names":["React","useState","axios","Weatherinfo","weatherforecast","Weather","props","city","setCity","defaultCity","load","setLoad","weather","setWeather","handleSubmit","event","preventDefault","apiKey","url","get","then","showTemperature","response","console","log","data","coordinates","temperature","main","temp","description","humidity","wind","Math","round","speed","icon","updateCity","target","value","form"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Weatherinfo from \"./Weatherinfo\";\nimport weatherforecast from \"./weatherforecast\";\n\nexport default function Weather(props) {\n  const [city, setCity] = useState(props.defaultCity);\n  let [load, setLoad] = useState(false);\n  let [weather, setWeather] = useState({});\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    let apiKey = `cb957f6011cbe58c2051d26f28640ef9`;\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(url).then(showTemperature);\n  }\n  function showTemperature(response) {\n    setLoad(true);\n    console.log(response.data);\n    setWeather({\n      coordinates: response.data.coordinates,\n      temperature: response.data.main.temp,\n      description: response.data.weather[0].description,\n      humidity: response.data.main.humidity,\n      wind: Math.round(response.data.wind.speed),\n      icon: `http://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`,\n    });\n  }\n\n  function updateCity(event) {\n    setCity(event.target.value);\n  }\n\n  let form = (\n    <form onSubmit={handleSubmit}>\n      <input\n        onChange={updateCity}\n        type=\"Search\"\n        placeholder=\"Search for a city\"\n      />\n      <input type=\"submit\" value=\"Search\" />\n    </form>\n  );\n\n  if (load) {\n    return (\n      <div>\n        {\" \"}\n        {form} <br />{\" \"}\n        <ul className=\"weather\">\n          {\" \"}\n          <li> Here's the weather in {city} </li>{\" \"}\n          <li>\n            {\" \"}\n            <img src={weather.icon} alt={weather.description} />{\" \"}\n          </li>\n          <br /> <strong>Temperature:</strong> {Math.round(weather.temperature)}{\" \"}\n          ºC\n          <li>\n            {\" \"}\n            <strong>Description:</strong> {weather.description}{\" \"}\n          </li>{\" \"}\n          <li>\n            <strong>Humidity:</strong> {Math.round(weather.humidity)} %\n          </li>\n          <li>\n            <strong>Wind:</strong> {weather.wind} km/h\n          </li>\n        </ul>\n        <Weatherinfo data={Weather} />\n        <weatherforecast coordinates={Weather.coordinates} />\n      </div>\n    );\n  } else {\n    return <div> {form} </div>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}